/**
 * @param {number} n
 * @return {number}
 */
var bulbSwitch = function(n) {
  return Math.floor(Math.sqrt(n))
};

/**
 * 
 * 首先这道题的分类是：Brain Teaser～
 * 也就是说，这道题就是在逗我！
 * 根本不用一个一个的 while 循环，想清楚了，一行代码 Accept!
 * 
 * 嗯好，下面我来解释一下.....
 * 
 * 每个灯泡一开始都是关着的，当灯泡开关被操作了奇数次的时候，它就将会是开着的！
 * 
 * 那么对于一个位置 n 的灯泡，它会被操作几次呢？
 * 它有几个因子，就会被操作几次。
 * 比如 6 这个数，在 1，2，3，6 轮操作的时候，会被改变。做了偶数次改变，所以最后还是关着的。
 * 
 * 那什么数会有奇数个因子？
 * 答案就是，平方数！
 * 
 * 所以，只要给出 n 以内，有多少平方数，就是最后的答案。
 * 
 * 啊哈哈解决了，果然就是在逗我.....
 * 
 */